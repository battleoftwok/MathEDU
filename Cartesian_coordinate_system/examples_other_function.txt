Ниже приведены примеры других функций, которые можно подставить в метод self.functions():

self.coords.append((100 * math.cos(val) * math.sin(val), 100 * math.sin(val) * math.cos(val)))
self.coords.append((step * math.sin(step), step * math.cos(step)))
self.coords.append((step * math.sin(step) ** 1 - val, step * math.cos(step) ** 1 + val))
self.coords.append((step * math.sin(step) ** 2 - val, step * math.cos(step) ** 1 - val))
self.coords.append((step * math.sin(step), val * math.cos(step)))
self.coords.append((val * math.sin(step), step * math.cos(step)))
self.coords.append((val * math.sin(step), val * math.cos(step)))
self.coords.append((step * math.sin(val + step), step * math.tan(val + step)))
self.coords.append((step * math.sin(1 / val + 10000 * step), step * math.tan(1000 / val + step)))
self.coords.append((step * math.sin(1 / 1 + step * val), step * math.tan(1 / 1 + val * step)))
self.coords.append((step * math.sin(step * val), step * math.tan(1 / val * step)))
self.coords.append((step * math.sin(step) * math.cos(step), 2 * step))
self.coords.append((step * math.sin(step) * math.cos(val), 2 * step))
self.coords.append((step * math.sin(step) * math.cos(val), step * math.sin(val)))
self.coords.append((step * math.sin(step) * math.cos(val), step * math.cos(val)))
self.coords.append((step * math.sin(step) * math.cos(val), step * math.tan(val)))
self.coords.append((step * math.sin(step) * math.cos(val), step * math.cos(val) / (1 + math.sin(step))))
self.coords.append((step * math.tan(step) * math.cos(step), 2 * step))
self.coords.append(
    (-450 + val * math.cos(step) * math.tan(step) * math.sin(step), 3 * math.tan(.02 * val) * step))
self.coords.append(
    (step * math.sin(step) * (1 / (1 + .1 * val)), step * math.cos(step) * (1 / (1 + .1 * val))))
self.coords.append(
    (step * math.sin(step) * (1 / (1 + .01 * val)), step * math.cos(step) * (1 / (1 + .01 * val))))
self.coords.append((.1 * step * val * math.sin(step * val), .1 * step * val * math.cos(step * val)))
self.coords.append((step * math.tan(1 / val + 10000 * step), step * math.tan(1000 / val + step)))
self.coords.append((step * math.tan(1 / val + 100 * step), step * math.tan(1000 / val + step)))
self.coords.append(
    (.01 * val ** 2 * math.cos(100 / val + 1 * step), step * math.sin(1 / 100 * val + step)))
self.coords.append(
    (.01 * val ** 2 * math.cos(100 / val + 1 * step), step * math.sin(1 / 10 * val + step)))
self.coords.append((.01 * val ** 2 * math.cos(100 / val + 1 * step), step * math.sin(1 / 10 * val)))
self.coords.append((.01 * val ** 2 * math.cos(100 / 1 + step), step * math.sin(1 / 1 + step * val)))
self.coords.append((step * math.sin(step * val), -350 + val * step + math.tan(step * val)))
self.coords.append((step * math.sin(step - step * val), val * step + math.tan(1 - step * val)))
self.coords.append((step * math.sin(val - step * val), val * step + math.tan(step - step * val)))
self.coords.append((step * math.sin(step * val), val * math.cos(step * val) - math.sin(step * val)))
self.coords.append(
    (step * math.sin(step * val) * math.cos(step * val), val * math.cos(step * val) + math.sin(step * val)))
self.coords.append(
    (-450 + step * val + math.sin(step * val), val * math.cos(step * val) + math.sin(step * val)))
self.coords.append(
    (-450 + .5 * step * val + math.sin(step * val), val * math.cos(step * val) + math.sin(step * val)))
self.coords.append(
    (-450 + .05 * step * val + math.sin(step * val), val * math.cos(step * val) + math.sin(step * val)))
self.coords.append(
    (-450 + step * val + math.sin(step * val), val * 5 * math.cos(step * val) + math.sin(step * val)))
self.coords.append(
    (-450 + step * val + math.sin(step * val), val * 5 * math.tan(step * val) + math.sin(step * val)))
self.coords.append(
    (-450 + step * val + math.sin(step * val), val * 5 * math.tan(step * val) - math.sin(step ** val ** 2)))
self.coords.append((step * math.sin(step * val) + math.cos(step * val),
                    step * val * math.cos(val * step) / (1 + math.sin(step))))
self.coords.append((math.sin(val * step) * step * math.e, 100 * math.cos(val * step) * math.e))
self.coords.append((math.sin(val ** step) * step * math.e, step * math.sin(val * step) * math.e))
self.coords.append((100 * math.e * math.sin(step) ** 3, 100 * math.e * math.cos(step * val) ** 3))
self.coords.append(
    (100 * math.e * math.tan(step) ** 3, 100 * math.e * math.tan(step * val) ** 3))  # тангенсальный дождь
self.coords.append((.1 * step * math.sin(step * val) - (1 - math.sin(step * val)),
                    100 * math.tan(step * val) - (1 + math.cos(step * val))))
self.coords.append((10000 / (1 + step * math.e * math.sin(step * val)),
                    10000 / (1 - step * math.e * math.cos(step * val))))
self.coords.append(
    (val * math.sin(step * val) * math.cos(step * val), val * math.cos(step * val) + math.sin(step * val)))
self.coords.append((100 * math.sin(step) * math.cos(val) * math.tan(val),
                    100 * math.sin(val) * math.cos(step) * math.tan(val)))
self.coords.append((100 * math.sin(step) * math.cos(val) * math.tan(step),
                    100 * math.sin(val) * math.cos(step) * math.tan(val)))
self.coords.append(
    (100 * math.cos(step * val) * math.sin(val), 100 * math.sin(step * val) * math.cos(val)))
self.coords.append(
    (100 * math.cos(step * val) * math.sin(val), 100 * math.sin(step * val) * math.cos(step * val)))
self.coords.append(
    (100 * math.cos(step) * math.sin(step * val), 100 * math.sin(step * val) * math.cos(val)))
self.coords.append((step * math.sin(1 / val + 10 * step), step * math.tan(1 / val + step)))

self.coords.append((.1 * step * math.sin(step * val) - (1 - math.sin(step * val)),
                                150 * math.tan(step * val / (val ** .5)) - (1 + math.cos(step * val))))